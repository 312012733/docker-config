## 打包部署前端项目

1. 在前端项目路径下执行打包指令

   ```shell
   npm run build
   ```

2. build目录的文件拷贝到宿主机的/home/fn1/renren-vue、/home/fn2/renren-vue、/home/fn3/renren-vue的目录下面

3. 创建3节点的Nginx，部署前端项目

   宿主机/home/fn1/nginx.conf的配置文件

   ```
   user  nginx;
   worker_processes  1;
   error_log  /var/log/nginx/error.log warn;
   pid        /var/run/nginx.pid;

   events {
       worker_connections  1024;
   }

   http {
       include       /etc/nginx/mime.types;
       default_type  application/octet-stream;

       log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                         '$status $body_bytes_sent "$http_referer" '
                         '"$http_user_agent" "$http_x_forwarded_for"';

       access_log  /var/log/nginx/access.log  main;

       sendfile        on;
       #tcp_nopush     on;

       keepalive_timeout  65;

       #gzip  on;

   	proxy_redirect          off;
   	proxy_set_header        Host $host;
   	proxy_set_header        X-Real-IP $remote_addr;
   	proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
   	client_max_body_size    10m;
   	client_body_buffer_size   128k;
   	proxy_connect_timeout   5s;
   	proxy_send_timeout      5s;
   	proxy_read_timeout      5s;
   	proxy_buffer_size        4k;
   	proxy_buffers           4 32k;
   	proxy_busy_buffers_size  64k;
   	proxy_temp_file_write_size 64k;

   	server {
   		listen 6501;
   		server_name  192.168.99.104;
   		location  /  {
   			root  /home/fn1/renren-vue;
   			index  index.html;
   		}
   	}
   }
   ```

   ```shell
   #启动第fn1节点
   docker run -it -d --name fn1 -v /home/fn1/nginx.conf:/etc/nginx/nginx.conf -v /home/fn1/renren-vue:/home/fn1/renren-vue --privileged --net=host nginx
   ```

   宿主机/home/fn2/nginx.conf的配置文件

   ```shell
   user  nginx;
   worker_processes  1;
   error_log  /var/log/nginx/error.log warn;
   pid        /var/run/nginx.pid;

   events {
       worker_connections  1024;
   }

   http {
       include       /etc/nginx/mime.types;
       default_type  application/octet-stream;

       log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                         '$status $body_bytes_sent "$http_referer" '
                         '"$http_user_agent" "$http_x_forwarded_for"';

       access_log  /var/log/nginx/access.log  main;

       sendfile        on;
       #tcp_nopush     on;

       keepalive_timeout  65;

       #gzip  on;

   	proxy_redirect          off;
   	proxy_set_header        Host $host;
   	proxy_set_header        X-Real-IP $remote_addr;
   	proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
   	client_max_body_size    10m;
   	client_body_buffer_size   128k;
   	proxy_connect_timeout   5s;
   	proxy_send_timeout      5s;
   	proxy_read_timeout      5s;
   	proxy_buffer_size        4k;
   	proxy_buffers           4 32k;
   	proxy_busy_buffers_size  64k;
   	proxy_temp_file_write_size 64k;

   	server {
   		listen 6502;
   		server_name  192.168.99.104;
   		location  /  {
   			root  /home/fn2/renren-vue;
   			index  index.html;
   		}
   	}
   }
   ```

   ```shell
   #启动第fn2节点
   docker run -it -d --name fn2 -v /home/fn2/nginx.conf:/etc/nginx/nginx.conf -v /home/fn2/renren-vue:/home/fn2/renren-vue --privileged --net=host nginx
   ```

   宿主机/home/fn3/nginx.conf的配置文件

   ```shell
   user  nginx;
   worker_processes  1;
   error_log  /var/log/nginx/error.log warn;
   pid        /var/run/nginx.pid;

   events {
       worker_connections  1024;
   }

   http {
       include       /etc/nginx/mime.types;
       default_type  application/octet-stream;

       log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                         '$status $body_bytes_sent "$http_referer" '
                         '"$http_user_agent" "$http_x_forwarded_for"';

       access_log  /var/log/nginx/access.log  main;

       sendfile        on;
       #tcp_nopush     on;

       keepalive_timeout  65;

       #gzip  on;

   	proxy_redirect          off;
   	proxy_set_header        Host $host;
   	proxy_set_header        X-Real-IP $remote_addr;
   	proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
   	client_max_body_size    10m;
   	client_body_buffer_size   128k;
   	proxy_connect_timeout   5s;
   	proxy_send_timeout      5s;
   	proxy_read_timeout      5s;
   	proxy_buffer_size        4k;
   	proxy_buffers           4 32k;
   	proxy_busy_buffers_size  64k;
   	proxy_temp_file_write_size 64k;

   	server {
   		listen 6503;
   		server_name  192.168.99.104;
   		location  /  {
   			root  /home/fn3/renren-vue;
   			index  index.html;
   		}
   	}
   }
   ```

   启动fn3节点

   ```shell
   #启动第fn3节点
   docker run -it -d --name fn3 -v /home/fn3/nginx.conf:/etc/nginx/nginx.conf -v /home/fn3/renren-vue:/home/fn3/renren-vue --privileged --net=host nginx
   ```

4. 配置负载均衡

   宿主机/home/ff1/nginx.conf配置文件

   ```shell
   user  nginx;
   worker_processes  1;
   error_log  /var/log/nginx/error.log warn;
   pid        /var/run/nginx.pid;

   events {
       worker_connections  1024;
   }

   http {
       include       /etc/nginx/mime.types;
       default_type  application/octet-stream;

       log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                         '$status $body_bytes_sent "$http_referer" '
                         '"$http_user_agent" "$http_x_forwarded_for"';

       access_log  /var/log/nginx/access.log  main;

       sendfile        on;
       #tcp_nopush     on;

       keepalive_timeout  65;

       #gzip  on;

   	proxy_redirect          off;
   	proxy_set_header        Host $host;
   	proxy_set_header        X-Real-IP $remote_addr;
   	proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
   	client_max_body_size    10m;
   	client_body_buffer_size   128k;
   	proxy_connect_timeout   5s;
   	proxy_send_timeout      5s;
   	proxy_read_timeout      5s;
   	proxy_buffer_size        4k;
   	proxy_buffers           4 32k;
   	proxy_busy_buffers_size  64k;
   	proxy_temp_file_write_size 64k;

   	upstream fn {
   		server 192.168.99.104:6501;
   		server 192.168.99.104:6502;
   		server 192.168.99.104:6503;
   	}
   	server {
           listen       6601;
           server_name  192.168.99.104;
           location / {
               proxy_pass   http://fn;
               index  index.html index.htm;
           }
       }
   }
   ```

   ```shell
   #启动ff1节点
   docker run -it -d --name ff1 -v /home/ff1/nginx.conf:/etc/nginx/nginx.conf --net=host --privileged nginx
   ```

   宿主机/home/ff2/nginx.conf配置文件

   ```shell
   user  nginx;
   worker_processes  1;
   error_log  /var/log/nginx/error.log warn;
   pid        /var/run/nginx.pid;

   events {
       worker_connections  1024;
   }

   http {
       include       /etc/nginx/mime.types;
       default_type  application/octet-stream;

       log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                         '$status $body_bytes_sent "$http_referer" '
                         '"$http_user_agent" "$http_x_forwarded_for"';

       access_log  /var/log/nginx/access.log  main;

       sendfile        on;
       #tcp_nopush     on;

       keepalive_timeout  65;

       #gzip  on;

   	proxy_redirect          off;
   	proxy_set_header        Host $host;
   	proxy_set_header        X-Real-IP $remote_addr;
   	proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
   	client_max_body_size    10m;
   	client_body_buffer_size   128k;
   	proxy_connect_timeout   5s;
   	proxy_send_timeout      5s;
   	proxy_read_timeout      5s;
   	proxy_buffer_size        4k;
   	proxy_buffers           4 32k;
   	proxy_busy_buffers_size  64k;
   	proxy_temp_file_write_size 64k;

   	upstream fn {
   		server 192.168.99.104:6501;
   		server 192.168.99.104:6502;
   		server 192.168.99.104:6503;
   	}
   	server {
           listen       6602;
           server_name  192.168.99.104;
           location / {
               proxy_pass   http://fn;
               index  index.html index.htm;
           }
       }
   }
   ```

   ```shell
   #启动ff2节点
   docker run -it -d --name ff2 -v /home/ff2/nginx.conf:/etc/nginx/nginx.conf --net=host --privileged nginx
   ```

5. 配置双机热备

   ```shell
   #进入ff1节点
   docker exec -it ff1 bash
   #更新软件包
   apt-get update
   #安装VIM
   apt-get install vim
   #安装Keepalived
   apt-get install keepalived
   #编辑Keepalived配置文件(如下)
   vim /etc/keepalived/keepalived.conf
   #启动Keepalived
   service keepalived start
   ```

   ```shell
   vrrp_instance VI_1 {
       state MASTER
       interface ens33
       virtual_router_id 52
       priority 100
       advert_int 1
       authentication {
           auth_type PASS
           auth_pass 123456
       }
       virtual_ipaddress {
           192.168.99.152
       }
   }
   virtual_server 192.168.99.151 6701 {
       delay_loop 3
       lb_algo rr
       lb_kind NAT
       persistence_timeout 50
       protocol TCP
       real_server 192.168.99.104 6601 {
           weight 1
       }
   }
   ```

   ```shell
   #进入ff1节点
   docker exec -it ff2 bash
   #更新软件包
   apt-get update
   #安装VIM
   apt-get install vim
   #安装Keepalived
   apt-get install keepalived
   #编辑Keepalived配置文件(如下)
   vim /etc/keepalived/keepalived.conf
   #启动Keepalived
   service keepalived start
   ```

   ```shell
   vrrp_instance VI_1 {
       state MASTER
       interface ens33
       virtual_router_id 52
       priority 100
       advert_int 1
       authentication {
           auth_type PASS
           auth_pass 123456
       }
       virtual_ipaddress {
           192.168.99.152
       }
   }
   virtual_server 192.168.99.151 6701 {
       delay_loop 3
       lb_algo rr
       lb_kind NAT
       persistence_timeout 50
       protocol TCP
       real_server 192.168.99.104 6602 {
           weight 1
       }
   }
   ```

   ​